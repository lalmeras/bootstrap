<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.likide.bootstrap</groupId>
	<artifactId>bootstrap</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>bootstrap-cli</module>
		<module>bootstrap-tinylog</module>
		<module>bootstrap-log4j2</module>
		<module>bootstrap-logging</module>
		<module>basic-cli</module>
		<module>slf4j-cli</module>
		<module>picocli-cli</module>
		<module>bootstrap-tasking</module>
	</modules>

	<properties>
		<variable.native-image.skip>true</variable.native-image.skip>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
		<maven.compiler.release>${maven.compiler.source}</maven.compiler.release>

		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<graalvm.version>19.3.2</graalvm.version>

		<picocli.version>4.3.0</picocli.version>
		<jline3.version>3.14.1</jline3.version>
		<log4j2.version>2.17.0</log4j2.version>
		<slf4j.version>1.8.0-beta4</slf4j.version>
		<tinylog.version>2.1.2</tinylog.version>

		<junit.jupiter.version>5.6.2</junit.jupiter.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>info.picocli</groupId>
				<artifactId>picocli</artifactId>
				<version>${picocli.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jline</groupId>
				<artifactId>jline-terminal</artifactId>
				<version>${jline3.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j18-impl</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.tinylog</groupId>
				<artifactId>tinylog-impl</artifactId>
				<version>${tinylog.version}</version>
			</dependency>
			<dependency>
				<groupId>org.tinylog</groupId>
				<artifactId>slf4j-tinylog</artifactId>
				<version>${tinylog.version}</version>
			</dependency>

			<dependency>
				<groupId>com.oracle.substratevm</groupId>
				<artifactId>svm</artifactId>
				<version>1.0.0-rc15</version>
				<scope>provided</scope>
				<!-- We only want the included annotations -->
				<exclusions>
					<exclusion>
						<artifactId>*</artifactId>
						<groupId>*</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>29.0-jre</version>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${junit.jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>3.3.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>3.16.1</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<!-- annotationProcessorPaths requires maven-compiler-plugin version 3.5 or higher -->
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<mainClass>${bootstrap.mainClass}</mainClass>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.graalvm.nativeimage</groupId>
					<artifactId>native-image-maven-plugin</artifactId>
					<version>${graalvm.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>native-image</goal>
							</goals>
							<phase>package</phase>
						</execution>
					</executions>
					<configuration>
						<skip>${variable.native-image.skip}</skip>
						<imageName>${bootstrap.imageName}</imageName>
						<buildArgs>
							--verbose -H:+PrintAnalysisCallTree -H:Log=registerResource
						</buildArgs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.igormaznitsa</groupId>
					<artifactId>mvn-jlink-wrapper</artifactId>
					<version>1.1.0</version>
					<executions>
						<execution>
							<id>call-jdeps</id>
							<goals>
								<goal>jdeps</goal>
							</goals>
							<configuration>
								<output>${project.build.directory}${file.separator}jdeps.out</output>
								<options>
									<option>${project.build.directory}${file.separator}${project.build.finalName}.jar</option>
								</options>
							</configuration>
						</execution>
						<execution>
							<id>call-jlink</id>
							<goals>
								<goal>jlink</goal>
							</goals>
							<configuration>
								<jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
								<output>${project.build.directory}${file.separator}preparedJDK</output>
								<modulePaths>
									<path>${java.home}${file.separator}jmods</path>
								</modulePaths>
								<addModules>
									<module>java.compiler</module>
								</addModules>
								<options>
									<option>--compress=2</option>
									<option>--no-header-files</option>
									<option>--no-man-pages</option>
								</options>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
