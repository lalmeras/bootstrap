<project xmlns:if="ant:if" xmlns:unless="ant:unless">
	<target name="patch-modules" depends="patch-log4j-slf4j" />
	<target name="patch-log4j-slf4j">
		<patch-jar patch.groupId="org.tinylog" patch.artifactId="tinylog-api" patch.module="org.tinylog.api" />
		<patch-jar patch.groupId="org.tinylog" patch.artifactId="tinylog-impl" patch.module="org.tinylog.impl" />
		<patch-jar patch.groupId="org.tinylog" patch.artifactId="slf4j-tinylog" patch.module="org.tinylog.api.slf4j" />
		
		<patch-jar patch.groupId="org.apache.logging.log4j" patch.artifactId="log4j-core" patch.module="org.apache.logging.log4j.core" />
		<patch-jar patch.groupId="org.apache.logging.log4j" patch.artifactId="log4j-slf4j18-impl" patch.module="org.apache.logging.log4j.slf4j" />
		
		<patch-jar patch.groupId="org.slf4j" patch.artifactId="jul-to-slf4j" patch.module="jul.to.slf4j" />
		<patch-jar patch.groupId="org.jline" patch.artifactId="jline-terminal" patch.module="jline.terminal" />
	</target>
	<macrodef name="patch-jar">
		<attribute name="patch.groupId" />
		<attribute name="patch.artifactId" />
		<attribute name="patch.module" />
		<sequential>
			<sequential if:set="@{patch.groupId}:@{patch.artifactId}:jar">
				<local name="patch.outputDirectory" />
				<local name="patch.classesOutputDirectory" />
				<local name="patch.jar.filename" />
				<local name="patch.source" />
				<local name="patch.jar" />
				<property name="patch.classesOutputDirectory" value="${project.build.directory}/patches-classes/@{patch.artifactId}" />
				<property name="patch.outputDirectory" value="${project.build.directory}/dependency" />
				<property name="patch.source" value="${@{patch.groupId}:@{patch.artifactId}:jar}" />
				<basename property="patch.jar.filename" file="${patch.source}" />
				<property name="patch.jar" value="${patch.outputDirectory}/${patch.jar.filename}" />
				
				<mkdir dir="${patch.classesOutputDirectory}" />
				<mkdir dir="${patch.outputDirectory}" />
				<javac srcdir="patches/@{patch.artifactId}" includeantruntime="false" destdir="${patch.classesOutputDirectory}">
					<compilerarg value="--module-path" />
					<compilerarg value="${project.build.directory}/dependency" />
					<compilerarg value="--patch-module" />
					<compilerarg value="@{patch.module}=${patch.jar}" />
				</javac>
				<zip update="true" destfile="${patch.jar}" basedir="${patch.classesOutputDirectory}" whenempty="fail">
					<fileset file="module-info.class" />
				</zip>
			</sequential>
		</sequential>
	</macrodef>
</project>